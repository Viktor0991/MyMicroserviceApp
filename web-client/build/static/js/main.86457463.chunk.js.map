{"version":3,"sources":["constants/index.js","util/APIUtils.js","common/LoadingIndicator.js","store/actions/account-actions.js","ui/Account/actions/UpAccountBalanceAction.js","ui/Account/actions/ExchangeAccountBalanceAction.js","ui/Account/actions/HistoryAccountAction.js","ui/Account/Account.js","ui/NewAccount/NewAccount.js","view/AccountsView/AccountsView.js","store/actions/currency-actions.js","ui/Currency/Currency.js","view/CurrencyView/CurrencyView.js","ui/Exchange/ExchangeForm.js","view/ExchangeView/ExchangeView.js","store/actions/history-actions.js","ui/HistoryEvent/HistoryEvent.js","view/HistoryView/HistoryView.js","store/actions/auth-actions.js","user/login/Login.js","common/AppHeader.js","common/NotFound.js","common/PrivateRoute.js","app/App.js","registerServiceWorker.js","util/history.js","util/reducer-utils.js","store/reducers/auth-reducer.js","store/reducers/currency-reducer.js","store/reducers/accounts-reducer.js","store/reducers/history-reducer.js","services/auth-api-service.js","store/sagas/auth-saga.js","services/currency-rate-api-service.js","store/sagas/currency-saga.js","services/account-api-service.js","store/sagas/accounts-saga.js","services/history-api-service.js","store/sagas/history-saga.js","store/sagas/root-saga.js","store/store.js","index.js","util/store-utils.js"],"names":["API_BASE_URL","process","ACCESS_TOKEN","request","options","headers","Headers","localStorage","getItem","append","defaults","Object","assign","fetch","url","then","response","json","ok","Promise","reject","getCurrentUser","method","LoadingIndicator","props","antIcon","_jsx","Icon","type","style","fontSize","spin","Spin","indicator","display","textAlign","marginTop","ACCOUNT_LIST_REQUEST","ACCOUNT_LIST_SUCCESS","ACCOUNT_LIST_ERROR","NEW_ACCOUNT_REQUEST","NEW_ACCOUNT_SUCCESS","UP_ACCOUNT_REQUEST","UP_ACCOUNT_SUCCESS","EXCHANGE_REQUEST","EXCHANGE_SUCCESS","accountsListRequest","accountsListSuccess","accounts","payload","accountsListFailed","error","newAccountSuccess","accountId","newAccountFailed","upAccountSuccess","account","upAccountFailed","exchangeSuccess","exchangeFailed","UpAccountBalanceAction","_ref","_useState","useState","_useState2","_slicedToArray","isModalVisible","setIsModalVisible","_useState3","_useState4","amount","setAmount","showModal","useCallback","handleCancel","handleChange","dispatch","useDispatch","_jsxs","children","Button","icon","ToTopOutlined","onClick","Modal","title","visible","onOk","uid","uuidv4","onCancel","InputNumber","defaultValue","onChange","value","ExchangeAction","from","Link","to","SwapOutlined","HistoryAction","HistoryOutlined","Account","id","currency","balance","Card","bordered","width","actions","ExchangeAccountBalanceAction","HistoryAccountAction","Space","align","size","split","Divider","Option","Select","NewAccount","currencyCode","setCurrencyCode","code","handleOk","shape","float","PlusOutlined","AccountsView","_useSelector","useSelector","state","isLoading","useEffect","className","length","direction","sort","a","b","map","CURRENCY_RATE_REQUEST","CURRENCY_RATE_SUCCESS","currencyRateSuccess","country","rate","currencyRateFailed","Currency","lang","alignItems","CurrencyView","currencyRates","entries","_ref2","key","slice","_ref3","_ref4","marginLeft","FormItem","Form","Item","formatAccount","concat","ExchangeForm","sourceId","onSubmit","sourceAccountId","setSourceAccountId","targetAccountId","setTargetAccountId","_useState5","_useState6","handleSourceChange","handleTargetChange","handleAmountChange","handleSubmit","values","target","money","onFinish","name","placeholder","disabled","label","filter","parseInt","rules","required","message","htmlType","ExchangeView","params","useParams","history","useHistory","exchangeRequest","push","PageHeader","onBack","goBack","EVENT_LIST_REQUEST","EVENT_LIST_SUCCESS","EVENT_LIST_ERROR","eventListSuccess","events","eventListFailed","DescriptionItem","Descriptions","HistoryEvent","event","operation","column","created","fromAccount","HistoryView","accountEvents","e","Empty","description","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAIL","REQUEST_USER_PROFILE","GET_USER_PROFILE","LOGOUT_REQUEST","LOGOUT_SUCCESS","loginSuccess","token","loginFailed","requestProfile","userProfile","profile","user","logoutSuccess","LoginForm","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","bind","_assertThisInitialized","_createClass","this","login","Input","Password","Component","Login","auth","loginRequest","notification","success","error_description","Header","Layout","AppHeader","handleMenuClick","onLogout","menuItems","currentUser","Menu","ProfileDropdownMenu","mode","selectedKeys","location","pathname","lineHeight","dropdownMenu","Dropdown","overlay","trigger","getPopupContainer","document","getElementsByClassName","marginRight","withRouter","NotFound","apply","arguments","PrivateRoute","component","authenticated","rest","_objectWithoutProperties","_excluded","Route","_objectSpread","render","Redirect","Content","App","isAuthenticated","handleLogout","loadCurrentUser","config","placement","top","duration","_this2","setState","catch","logout","Switch","exact","path","connect","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","createBrowserHistory","createReducer","initialState","handlers","undefined","action","hasOwnProperty","reducer","_createReducer","_defineProperty","AuthActions","CurrencyActions","AccountActions","_toConsumableArray","AccountEventActions","loginCall","body","URLSearchParams","grant_type","profileCall","loginSaga","_marked2","_regeneratorRuntime","mark","onLoginSuccessSaga","_marked3","profileSaga","_marked4","pushToHome","_marked5","logoutSaga","_marked6","watchAuth","data","wrap","_context","prev","next","sent","access_token","put","t0","stop","_marked","_context2","setItem","userInfo","_context3","_context4","_context5","removeItem","_context6","takeLatest","getCurrencyRate","requestAllCurrencySaga","requestCurrencySeq","watchCurrency","takeEvery","getUserAccountsCall","createUserAccount","JSON","stringify","upAccountBalance","exchange","requestListAccountsSaga","requestNewAccountSaga","onCompleteSaga","requestUpAccountSaga","requestExchangeSaga","watchAccounts","getAccountHistoryCall","requestHistorySaga","watchHistory","rootSaga","all","reducers","combineReducers","authReducer","currencyReducer","accountReducer","historyReducer","appSagaMiddleware","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createAppStore","store","createStore","applyMiddleware","run","loadFromStorage","ReactDOM","Provider","Router","browserHistory","getElementById","URL","origin","addEventListener","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.86457463.chunk.js","sourcesContent":["export const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:8080/api';\nexport const ACCESS_TOKEN = 'accessToken';\n","import { API_BASE_URL, ACCESS_TOKEN } from '../constants'\n\nexport const request = (options) => {\n    const headers = new Headers({\n        'Content-Type': 'application/json',\n    });\n    \n    if(localStorage.getItem(ACCESS_TOKEN)) {\n        headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN))\n    }\n\n    const defaults = {headers: headers};\n    options = Object.assign({}, defaults, options);\n\n    return fetch(options.url, options)\n        .then(response =>\n            response.json().then(json => {\n                if (!response.ok) {\n                    return Promise.reject(json);\n                }\n                return json;\n            })\n        );\n};\n\nexport function login(request) {\n    let options = {\n        method: 'POST',\n        body: new URLSearchParams({\n            grant_type: 'password',\n            ...request\n        }),\n        headers: {\n            \"Content-Type\": 'application/x-www-form-urlencoded',\n            \"Authorization\": 'Basic d2ViLWNsaWVudDpwaW4xMjM=' // web-client:pin123\n        }\n    };\n\n    return fetch(API_BASE_URL + \"/oauth/token\", options)\n        .then(response =>\n            response.json().then(json => {\n                if(!response.ok) {\n                    return Promise.reject(json);\n                }\n                return json;\n            })\n        );\n}\n\nexport function getCurrentUser() {\n    if (!localStorage.getItem(ACCESS_TOKEN)) {\n        return Promise.reject(\"No access token set.\");\n    }\n\n    return request({\n        url: API_BASE_URL + \"/user\",\n        method: 'GET'\n    });\n}\n\n","import React from 'react';\nimport { Spin } from 'antd';\nimport Icon from '@ant-design/icons';\n\nexport default function LoadingIndicator(props) {\n    const antIcon = <Icon type=\"loading-3-quarters\" style={{ fontSize: 30 }} spin />;\n    return (\n        <Spin indicator={antIcon} style = {{display: 'block', textAlign: 'center', marginTop: 30}} />\n    );\n}\n","export const ACCOUNT_LIST_REQUEST = 'ACCOUNT_LIST_REQUEST';\nexport const ACCOUNT_LIST_SUCCESS = 'ACCOUNT_LIST_SUCCESS';\nexport const ACCOUNT_LIST_ERROR = 'ACCOUNT_LIST_ERROR';\n\nexport const NEW_ACCOUNT_REQUEST = 'NEW_ACCOUNT_REQUEST';\nexport const NEW_ACCOUNT_SUCCESS = 'NEW_ACCOUNT_SUCCESS';\nexport const NEW_ACCOUNT_ERROR = 'NEW_ACCOUNT_ERROR';\n\nexport const UP_ACCOUNT_REQUEST = 'UP_ACCOUNT_REQUEST';\nexport const UP_ACCOUNT_SUCCESS = 'UP_ACCOUNT_SUCCESS';\nexport const UP_ACCOUNT_ERROR = 'UP_ACCOUNT_ERROR';\n\nexport const EXCHANGE_REQUEST = 'EXCHANGE_REQUEST';\nexport const EXCHANGE_SUCCESS = 'EXCHANGE_SUCCESS';\nexport const EXCHANGE_ERROR = 'EXCHANGE_ERROR';\n\nexport const accountsListRequest = () => ({ type: ACCOUNT_LIST_REQUEST });\nexport const accountsListSuccess = (accounts) => ({ type: ACCOUNT_LIST_SUCCESS, payload: accounts });\nexport const accountsListFailed = (error) => ({ type: ACCOUNT_LIST_ERROR, payload: { error } });\n\nexport const newAccountRequest = (code) => ({ type: NEW_ACCOUNT_REQUEST, payload: code });\nexport const newAccountSuccess = (accountId) => ({ type: NEW_ACCOUNT_SUCCESS, payload: accountId });\nexport const newAccountFailed = (error) => ({ type: NEW_ACCOUNT_ERROR, payload: { error } });\n\nexport const upAccountRequest = (values) => ({ type: UP_ACCOUNT_REQUEST, payload: values });\nexport const upAccountSuccess = (account) => ({ type: UP_ACCOUNT_SUCCESS, payload: account });\nexport const upAccountFailed = (error) => ({ type: UP_ACCOUNT_ERROR, payload: { error } });\n\nexport const exchangeRequest = (values) => ({ type: EXCHANGE_REQUEST, payload: values });\nexport const exchangeSuccess = (account) => ({ type: EXCHANGE_SUCCESS, payload: account });\nexport const exchangeFailed = (error) => ({ type: EXCHANGE_ERROR, payload: { error } });\n","import React, { useState, useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Button, Modal, InputNumber } from 'antd'\nimport { ToTopOutlined } from '@ant-design/icons'\n\nimport { upAccountRequest } from '../../../store/actions/account-actions'\nimport {v4 as uuidv4} from \"uuid\";\n\nconst UpAccountBalanceAction = ({ account }) => {\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    const [amount, setAmount] = useState(0);\n\n    const showModal = useCallback(() => setIsModalVisible(true),[]);\n    const handleCancel = useCallback(() => setIsModalVisible(false), []);\n    const handleChange = useCallback((amount) => setAmount(amount), []);\n\n    const dispatch = useDispatch();\n\n    const handleOk = () => {\n        const uid = uuidv4();\n        dispatch(upAccountRequest({ uid, account, amount }));\n        setIsModalVisible(false);\n    };\n\n    return (\n        <div>\n            <Button type=\"link\" icon={ <ToTopOutlined  key=\"topUp\" /> } onClick={showModal}>Top Up</Button>\n            <Modal title={\"Up balance for account: \" + account} visible={isModalVisible}\n                   onOk={handleOk} onCancel={handleCancel}\n            >\n                <InputNumber defaultValue={0} onChange={handleChange} value={amount} />\n            </Modal>\n        </div>\n    );\n};\n\nexport default UpAccountBalanceAction;\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button } from 'antd'\nimport { SwapOutlined } from '@ant-design/icons'\n\nconst ExchangeAction = ({ from }) => {\n    return (\n        <Link to={\"/exchange/\" + from}>\n            <Button type=\"link\" icon={ <SwapOutlined key=\"exchange\" /> } >Exchange</Button>\n        </Link>\n    )\n};\n\nexport default ExchangeAction;\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button } from 'antd'\nimport { HistoryOutlined } from '@ant-design/icons'\n\nconst HistoryAction = ({ account }) => {\n    return (\n        <Link to={\"/history/\" + account}>\n            <Button type=\"link\" icon={ <HistoryOutlined key=\"history\" /> } >History</Button>\n        </Link>\n    )\n};\n\nexport default HistoryAction;\n","import React from 'react'\nimport { Card, Space, Divider } from 'antd';\n\nimport { ExchangeAccountBalanceAction, UpAccountBalanceAction, HistoryAccountAction } from './actions'\n\nconst Account = ({id, currency, balance}) => {\n    return (\n        <Card bordered={true}\n              style={{ width: 600 }}\n              title={\"Account id: \" + id}\n              actions={[\n                  <UpAccountBalanceAction account={id} />,\n                  <ExchangeAccountBalanceAction from={id} />,\n                  <HistoryAccountAction account={id} />\n              ]}\n        >\n            <Space align=\"baseline\" size=\"large\" split={ <Divider type=\"vertical\" /> }>\n                <p>Currency: {currency}</p>\n                <p>Balance: {balance}</p>\n            </Space>\n        </Card>\n    )\n};\n\nexport default Account;\n\n","import React, { useState, useCallback } from 'react'\nimport { Button, Modal, Select } from 'antd';\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport { useDispatch } from \"react-redux\";\nimport { newAccountRequest } from '../../store/actions/account-actions';\n\nconst { Option } = Select;\n\nconst NewAccount = () => {\n    const dispatch = useDispatch();\n\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    const [currencyCode, setCurrencyCode] = useState('RUB');\n\n    const showModal = useCallback(() => setIsModalVisible(true),[]);\n    const handleCancel = useCallback(() => setIsModalVisible(false), []);\n    const handleChange = useCallback((code) => setCurrencyCode(code), []);\n\n    const handleOk = useCallback(() => {\n        dispatch(newAccountRequest(currencyCode));\n        setIsModalVisible(false);\n    },[currencyCode]);\n\n    return (\n        <div>\n            <Button type=\"primary\" shape=\"round\" size=\"large\" onClick={showModal}\n                    style={{ float: 'right' }} icon={ <PlusOutlined /> }\n            >\n                Add account\n            </Button>\n            <Modal title=\"New account\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\n                <Select value={currencyCode} style={{ width: 120 }} onChange={handleChange}>\n                    <Option value=\"RUB\">RUB</Option>\n                    <Option value=\"USD\">USD</Option>\n                    <Option value=\"EUR\">EUR</Option>\n                    <Option value=\"GBP\">GBP</Option>\n                </Select>\n            </Modal>\n        </div>\n    );\n};\n\nexport default NewAccount;\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Space } from 'antd';\nimport LoadingIndicator from \"../../common/LoadingIndicator\"\n\nimport { accountsListRequest } from '../../store/actions/account-actions'\n\nimport Account from '../../ui/Account'\nimport NewAccount from '../../ui/NewAccount'\n\nimport './AccountsView.css'\n\nconst AccountsView = () => {\n    const { isLoading, accounts } = useSelector(state => state.accounts);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(accountsListRequest())\n    }, [dispatch]);\n\n    if (isLoading) {\n        return <LoadingIndicator />\n    } else {\n        return (\n            <div className=\"accounts-container\">\n                <NewAccount />\n                {\n                    accounts.length === 0 ? (\n                        <div className=\"no-accounts-found\">\n                            <span>No accounts found</span>\n                        </div>\n                    ) : (\n                        <Space direction=\"vertical\" size=\"middle\">\n                            {\n                                accounts.sort((a, b) => a.id - b.id)\n                                    .map(a => <Account id={a.id} currency={a.currencyCode} balance={a.balance}/>)\n                            }\n                        </Space>\n                    )\n                }\n            </div>\n        );\n    }\n};\n\nexport default AccountsView;\n","export const CURRENCY_RATE_REQUEST = 'CURRENCY_RATE_REQUEST';\nexport const CURRENCY_RATE_SUCCESS = 'CURRENCY_RATE_SUCCESS';\nexport const CURRENCY_RATE_ERROR = 'CURRENCY_RATE_ERROR';\n\nexport const currencyAllRateRequest = () => ({\n    type: CURRENCY_RATE_REQUEST\n});\n\nexport const currencyRateSuccess = (country, rate) => ({\n    type: CURRENCY_RATE_SUCCESS,\n    payload: rate,\n    country,\n});\n\nexport const currencyRateFailed = (error) => ({\n    type: CURRENCY_RATE_ERROR,\n    payload: { error }\n});\n","import React from 'react';\nimport \"country-flag-icons/3x2/flags.css\";\nimport \"./Currency.css\";\n\nconst Currency = ({lang, rate}) => {\n    return <div style={{display: 'inline-flex', alignItems: 'center'}}>\n        <span className={\"currency-block flag:\" + lang} />\n        <span>: {rate}</span>\n    </div>\n};\n\nexport default Currency;\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Space } from 'antd'\n\nimport { currencyAllRateRequest } from '../../store/actions/currency-actions'\n\nimport Currency from '../../ui/Currency'\n\nconst CurrencyView = () => {\n    const currency = useSelector(state => state.currency.rate);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(currencyAllRateRequest())\n    }, [dispatch]);\n\n    let currencyRates = Object.entries(currency)\n        .map(([key, value]) => [key.slice(0, 2), value])\n        .map(([country, value]) => <Currency rate={value} lang={country} />);\n\n    return (\n        <Space style={{marginLeft: '100px'}} size={50} >\n            {currencyRates}\n        </Space>\n    )\n};\n\nexport default CurrencyView;\n","import React, {useCallback, useState} from 'react'\nimport {Button, Form, InputNumber, Select} from 'antd'\nimport {v4 as uuidv4} from 'uuid'\n\nconst { Option } = Select;\nconst { Item: FormItem } = Form;\n\nconst formatAccount = ( account ) =>\n    (`Account #${account.id}, balance: ${account.balance}, currency: ${account.currencyCode}`);\n\nconst ExchangeForm = ({ accounts, sourceId, onSubmit }) => {\n    const uid = uuidv4();\n\n    const [sourceAccountId, setSourceAccountId] = useState(sourceId);\n    const [targetAccountId, setTargetAccountId] = useState();\n    const [amount, setAmount] = useState();\n\n    const handleSourceChange = useCallback((value) => { setSourceAccountId(value) }, []);\n    const handleTargetChange = useCallback((value) => { setTargetAccountId(value) }, []);\n    const handleAmountChange = useCallback((value) => { setAmount(value) }, []);\n\n    const handleSubmit = useCallback((values) => {\n        let { target, amount } = values;\n        onSubmit({ uid, from: sourceAccountId, to: target, money: amount })\n    }, [uid, sourceAccountId]);\n\n    return (\n        <Form onFinish={handleSubmit} className=\"login-form\">\n            <FormItem name=\"source\">\n                <Select placeholder=\"Source account\" style={{ width: 400 }} disabled\n                        value={sourceAccountId} onChange={handleSourceChange}\n                        defaultValue={{\n                            value: sourceId,\n                            label: formatAccount(accounts.filter(a => a.id === parseInt(sourceId))[0])\n                        }}\n                >\n                    { accounts.map(a => <Option value={a.id}>{ formatAccount(a) }</Option>) }\n                </Select>\n            </FormItem>\n\n            <FormItem name=\"target\" rules={[\n                    {\n                        required: true,\n                        message: 'Please select target account',\n                    },\n                ]}\n            >\n                <Select placeholder=\"Target account\" style={{ width: 400 }}\n                        value={targetAccountId} onChange={handleTargetChange}\n                >\n                    {\n                        accounts.filter(a => a.id !== parseInt(sourceId))\n                            .map(a => <Option value={a.id}>{ formatAccount(a) }</Option>)\n                    }\n                </Select>\n            </FormItem>\n            <FormItem name=\"amount\" rules={[\n                    {\n                        required: true,\n                        message: 'Please input exchange amount',\n                    },\n                ]}\n            >\n                <InputNumber placeholder=\"Amount\" style={{ width: 200 }} onChange={handleAmountChange} />\n            </FormItem>\n            <FormItem>\n                <Button type=\"primary\" htmlType=\"submit\" size=\"large\" className=\"exchange-form-button\">Apply</Button>\n            </FormItem>\n        </Form>\n    )\n};\n\nexport default ExchangeForm;\n","import React, {useCallback} from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory, useParams } from 'react-router'\nimport { PageHeader, Card, Space } from 'antd'\n\nimport ExchangeForm from '../../ui/Exchange'\n\nimport { exchangeRequest } from '../../store/actions/account-actions'\n\nimport './ExchangeView.css'\n\nconst ExchangeView = () => {\n    const { accounts } = useSelector(state => state.accounts);\n\n    const params = useParams();\n    const history = useHistory();\n\n    const dispatch = useDispatch();\n    const onSubmit = useCallback((values) => {\n        dispatch(exchangeRequest(values));\n        history.push('/')\n    }, [dispatch, history]);\n\n    return (\n        <div className=\"exchange-container\">\n            <Space direction=\"vertical\">\n                <PageHeader className=\"exchange-page-header\" title=\"Exchange account view\"\n                            onBack={() => history.goBack()}\n                />\n                <Card style={{ width: 600 }}>\n                    <ExchangeForm accounts={accounts} sourceId={params.from} onSubmit={onSubmit} />\n                </Card>\n            </Space>\n        </div>\n    )\n};\n\nexport default ExchangeView;\n","export const EVENT_LIST_REQUEST = 'EVENT_LIST_REQUEST';\nexport const EVENT_LIST_SUCCESS = 'EVENT_LIST_SUCCESS';\nexport const EVENT_LIST_ERROR = 'EVENT_LIST_ERROR';\n\nexport const eventListRequest = (accountId) => ({ type: EVENT_LIST_REQUEST, payload: accountId });\n\nexport const eventListSuccess = (accountId, events) => ({\n    type: EVENT_LIST_SUCCESS,\n    account: accountId,\n    payload: events\n});\n\nexport const eventListFailed = (error) => ({ type: EVENT_LIST_ERROR, payload: { error } });\n","import React from 'react'\nimport { Card, Descriptions } from 'antd'\n\nconst DescriptionItem = Descriptions.Item;\n\nconst exchangeCaption = (amount) => (amount >= 0 ? 'From account' : 'To account');\n\nconst HistoryEvent = ({ event }) => (\n    <Card style={{ width: 600 }}>\n        <Descriptions title={\"Operation \" + event.operation} column={2}>\n            <DescriptionItem label=\"Amount\" > { event.amount + \" \" +  event.currency} </DescriptionItem>\n            <DescriptionItem label=\"Created\" > { event.created } </DescriptionItem>\n            {\n                event.fromAccount &&\n                    <DescriptionItem label={exchangeCaption(event.amount)} >\n                        { \"#\" + event.fromAccount }\n                    </DescriptionItem>\n            }\n        </Descriptions>\n    </Card>\n);\n\nexport default HistoryEvent;\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory, useParams } from 'react-router'\nimport { PageHeader, Space, Empty } from 'antd'\n\nimport { eventListRequest } from '../../store/actions/history-actions'\n\nimport HistoryEvent  from '../../ui/HistoryEvent'\n\nimport LoadingIndicator from '../../common/LoadingIndicator'\n\nimport './HistoryView.css'\n\nconst HistoryView = () => {\n    const { isLoading, events } = useSelector(state => state.history);\n    const dispatch = useDispatch();\n\n    const history = useHistory();\n    const { account } = useParams();\n\n    useEffect(() => {\n        dispatch(eventListRequest(account))\n    }, [dispatch, account]);\n\n    const accountEvents = events[account];\n\n    if (isLoading) {\n        return <LoadingIndicator />\n    } else {\n        return (\n            <div className=\"events-container\">\n                <Space direction=\"vertical\">\n                    <PageHeader className=\"history-page-header\" title={\"History account #\" + account + \" view\"}\n                                onBack={() => history.goBack()}\n                    />\n                    {\n                        accountEvents && accountEvents.length > 0 ? (\n                            <Space direction=\"vertical\">\n                                { accountEvents.map(e => <HistoryEvent event={e} />) }\n                            </Space>\n                        ) : (\n                            <div className=\"no-events-found\">\n                                <Empty description=\"No events found\" />\n                            </div>\n                        )\n                    }\n                </Space>\n            </div>\n        );\n    }\n};\n\nexport default HistoryView;\n","export const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\n\nexport const REQUEST_USER_PROFILE = 'REQUEST_USER_PROFILE';\nexport const GET_USER_PROFILE = 'GET_USER_PROFILE';\n\nexport const LOGOUT_REQUEST  = 'LOGOUT_REQUEST';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\n\nexport const loginRequest = (values) => ({\n    type: LOGIN_REQUEST,\n    payload: values\n});\n\nexport const loginSuccess = (token) => ({\n    type: LOGIN_SUCCESS,\n    payload: { token }\n});\n\nexport const loginFailed = (error) => ({\n    type: LOGIN_FAIL,\n    payload: { error }\n});\n\nexport const requestProfile = (token) => ({\n    type: REQUEST_USER_PROFILE,\n    payload: { token }\n});\n\nexport const userProfile = (profile) => ({\n    type: GET_USER_PROFILE,\n    payload: {user : profile.name}\n});\n\nexport const logoutRequest = () => ({\n    type: LOGOUT_REQUEST\n});\n\nexport const logoutSuccess = () => ({\n    type: LOGOUT_SUCCESS\n});\n","import React, {Component, useEffect, useCallback} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Form, Input, Button, notification } from 'antd';\n\nimport { loginRequest } from '../../store/actions/auth-actions'\n\nimport './Login.css';\n\nconst FormItem = Form.Item;\n\nconst Login = () => {\n    const { isLoading, message, error } = useSelector(state => state.auth);\n    const dispatch = useDispatch();\n\n    const login = useCallback((values) => dispatch(loginRequest(values)), [dispatch]);\n\n    useEffect(() => {\n        if (!isLoading && message) {\n            notification.success(message);\n        }\n    }, [isLoading, message]);\n\n    useEffect(() => {\n        if (error) {\n            notification.error({\n                message: error.error,\n                description: error.error_description\n            });\n        }\n    }, [error]);\n\n    return (\n        <div className=\"login-container\">\n            <h1 className=\"page-title\">Login</h1>\n            <div className=\"login-content\">\n                <LoginForm login={login} />\n            </div>\n        </div>\n    );\n};\n\nclass LoginForm extends Component {\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values) {\n        this.props.login(values);\n    }\n\n    render() {\n        return (\n            <Form onFinish={this.handleSubmit} className=\"login-form\">\n                <FormItem\n                    name=\"username\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your username!',\n                        },\n                    ]}\n                >\n                    <Input placeholder=\"Username\"/>\n                </FormItem>\n\n                <FormItem\n                    name=\"password\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your password!',\n                        },\n                    ]}\n                >\n                    <Input.Password placeholder=\"Password\" />\n                </FormItem>\n                <FormItem>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\" className=\"login-form-button\">Login</Button>\n                </FormItem>\n            </Form>\n        );\n    }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport {\n    Link,\n    withRouter\n} from 'react-router-dom';\nimport {Layout, Menu, Dropdown } from 'antd';\nimport { Icon } from '@ant-design/compatible';\nimport { CurrencyView } from '../view';\n\nimport './AppHeader.css';\n\nconst Header = Layout.Header;\n\nclass AppHeader extends Component {\n    constructor(props) {\n        super(props);\n        this.handleMenuClick = this.handleMenuClick.bind(this);\n    }\n\n    handleMenuClick({ key }) {\n      if(key === \"logout\") {\n        this.props.onLogout();\n      }\n    }\n\n    render() {\n        let menuItems;\n        if(this.props.currentUser) {\n          menuItems = [\n              <Menu.Item key=\"/\">\n                  <Link to=\"/\">\n                      <Icon type=\"home\" className=\"nav-icon\"/>\n                  </Link>\n              </Menu.Item>,\n              <Menu.Item key=\"/profile\" className=\"profile-menu\">\n                  <ProfileDropdownMenu\n                      currentUser={this.props.currentUser}\n                      handleMenuClick={this.handleMenuClick}/>\n              </Menu.Item>\n          ];\n        } else {\n          menuItems = [\n            <Menu.Item key=\"/login\">\n              <Link to=\"/login\">Login</Link>\n            </Menu.Item>,\n          ];\n        }\n\n        return (\n            <Header className=\"app-header\">\n                <div className=\"container\">\n                    <div className=\"app-title\">\n                        <Link to=\"/\">Java microservices web client</Link>\n                    </div>\n                    <CurrencyView />\n                    <Menu\n                        className=\"app-menu\"\n                        mode=\"horizontal\"\n                        selectedKeys={[this.props.location.pathname]}\n                        style={{lineHeight: '64px'}}>\n                        {menuItems}\n                    </Menu>\n                </div>\n            </Header>\n        );\n    }\n}\n\nfunction ProfileDropdownMenu(props) {\n  const dropdownMenu = (\n    <Menu onClick={props.handleMenuClick} className=\"profile-dropdown-menu\">\n      <Menu.Item key=\"user-info\" className=\"dropdown-item\" disabled>\n        <div className=\"user-full-name-info\">\n          {props.currentUser}\n        </div>\n        <div className=\"username-info\">\n          @{props.currentUser}\n        </div>\n      </Menu.Item>\n      <Menu.Divider />\n      <Menu.Item key=\"logout\" className=\"dropdown-item\">\n        Logout\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n      <Dropdown\n      overlay={dropdownMenu}\n      trigger={['click']}\n      getPopupContainer = { () => document.getElementsByClassName('profile-menu')[0]}>\n      <a className=\"ant-dropdown-link\">\n         <Icon type=\"user\" className=\"nav-icon\" style={{marginRight: 0}} /> <Icon type=\"down\" />\n      </a>\n    </Dropdown>\n  );\n}\n\n\nexport default withRouter(AppHeader);\n","import React, { Component } from 'react';\nimport './NotFound.css';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'antd';\n\nclass NotFound extends Component {\n    render() {\n        return (\n            <div className=\"page-not-found\">\n                <h1 className=\"title\">\n                    404\n                </h1>\n                <div className=\"desc\">\n                    The Page you're looking for was not found.\n                </div>\n                <Link to=\"/\"><Button className=\"go-back-btn\" type=\"primary\" size=\"large\">Go Back</Button></Link>\n            </div>\n        );\n    }\n}\n\nexport default NotFound;","import React from 'react';\nimport {\n    Route,\n    Redirect\n  } from \"react-router-dom\";\n  \n  \nconst PrivateRoute = ({ component: Component, authenticated, ...rest }) => (\n    <Route\n      {...rest}\n      render={props =>\n        authenticated ? (\n          <Component {...rest} {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/login',\n              state: { from: props.location }\n            }}\n          />\n        )\n      }\n    />\n);\n  \nexport default PrivateRoute","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './App.less';\nimport {\n  Route,\n  withRouter,\n  Switch\n} from 'react-router-dom';\n\nimport { getCurrentUser } from '../util/APIUtils';\n\nimport { AccountsView, ExchangeView, HistoryView } from '../view'\n\nimport Login from '../user/login/Login';\nimport AppHeader from '../common/AppHeader';\nimport NotFound from '../common/NotFound';\nimport LoadingIndicator from '../common/LoadingIndicator';\nimport PrivateRoute from '../common/PrivateRoute';\n\nimport { Layout, notification } from 'antd';\nimport { requestProfile, logoutRequest } from \"../store/actions/auth-actions\";\nconst { Content } = Layout;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: null,\n      isAuthenticated: false,\n      isLoading: false\n    };\n    this.handleLogout = this.handleLogout.bind(this);\n    this.loadCurrentUser = this.loadCurrentUser.bind(this);\n\n    notification.config({\n      placement: 'topRight',\n      top: 70,\n      duration: 3,\n    });\n  }\n\n  loadCurrentUser() {\n    getCurrentUser()\n    .then(response => {\n      this.setState({\n        currentUser: response.name,\n        isAuthenticated: true,\n        isLoading: false\n      });\n    }).catch(error => {\n      this.setState({\n        isLoading: false\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.props.profile(this.props.token);\n  }\n\n  handleLogout(redirectTo=\"/\", notificationType=\"success\", description=\"You're successfully logged out.\") {\n    this.props.logout();\n  }\n\n  render() {\n    if(this.state.isLoading) {\n      return <LoadingIndicator />\n    }\n\n    return (\n        <Layout className=\"app-container\">\n          <AppHeader isAuthenticated={this.props.isAuthenticated}\n            currentUser={this.props.user}\n            onLogout={this.handleLogout} />\n\n          <Content className=\"app-content\">\n            <div className=\"container\">\n              <Switch>\n                <PrivateRoute exact path=\"/\" authenticated={this.props.isAuthenticated}\n                              component={AccountsView}\n                />\n                <PrivateRoute path=\"/exchange/:from\" authenticated={this.props.isAuthenticated}\n                              component={ExchangeView}\n                />\n                <PrivateRoute path=\"/history/:account\" authenticated={this.props.isAuthenticated}\n                              component={HistoryView}\n                />\n                <Route path=\"/login\" render={(props) => <Login {...props} />}/>\n                <Route component={NotFound}/>\n              </Switch>\n            </div>\n          </Content>\n        </Layout>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  ...state.auth,\n  isAuthenticated: state.auth.token != null\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  profile: () => dispatch(requestProfile()),\n  logout: () => dispatch(logoutRequest())\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n","export default function createReducer(initialState, handlers) {\n  return function reducer(state = initialState, action) {\n    if (handlers.hasOwnProperty(action.type)) {\n      return handlers[action.type](state, action)\n    } else {\n      return state\n    }\n  }\n}","import createReducer from '../../util/reducer-utils';\nimport * as AuthActions from '../actions/auth-actions';\n\nconst init = {\n    isLoading: false\n};\n\nconst reducer = createReducer(init, {\n    [AuthActions.LOGIN_REQUEST]: (state) => ({\n        ...state, error: null, isLoading: true\n    }),\n    [AuthActions.LOGIN_SUCCESS]: (state, action) => ({\n        ...state, ...action.payload,\n        isLoading: false,\n        message: {\n            message: 'Currency exchange App',\n            description: \"You're successfully logged in.\",\n        }\n    }),\n    [AuthActions.LOGIN_FAIL]: (state, action) => ({\n        ...state, ...action.payload, token: null, isLoading: false\n    }),\n    [AuthActions.GET_USER_PROFILE]: (state, action) => ({\n        ...state, ...action.payload\n    }),\n    [AuthActions.LOGOUT_SUCCESS]: (state) => ({\n        ...state, token: null, user: null\n    })\n});\n\nexport default reducer\n","import createReducer from '../../util/reducer-utils';\nimport * as CurrencyActions from '../actions/currency-actions';\n\nconst init = {\n    rate: {}\n};\n\nconst reducer = createReducer(init, {\n    [CurrencyActions.CURRENCY_RATE_SUCCESS]: (state, action) => ({\n        ...state, rate: { ...state.rate, [action.country]: action.payload }\n    })\n});\n\nexport default reducer\n","import createReducer from '../../util/reducer-utils';\nimport * as AccountActions from '../actions/account-actions';\n\nconst init = {\n    isLoading: false,\n    accounts: [],\n    error: null\n};\n\nconst reducer = createReducer(init, {\n    [AccountActions.ACCOUNT_LIST_REQUEST]: (state) => ({\n        ...state, accounts: [], isLoading: true, error: null\n    }),\n    [AccountActions.ACCOUNT_LIST_SUCCESS]: (state, action) => ({\n        ...state, accounts: action.payload, isLoading: false\n    }),\n    [AccountActions.ACCOUNT_LIST_ERROR]: (state, action) => ({\n        ...state, isLoading: false, error: action.error\n    }),\n    [AccountActions.UP_ACCOUNT_SUCCESS]: (state, action) => ({\n        ...state,\n        accounts: [ ...state.accounts.filter(a => a.id !== action.payload.id), action.payload ],\n        isLoading: false\n    }),\n});\n\nexport default reducer\n","import createReducer from '../../util/reducer-utils'\nimport * as AccountEventActions from '../actions/history-actions'\n\nconst init = {\n    events: {},\n    isLoading: false,\n    error: null\n};\n\nconst reducer = createReducer(init, {\n    [AccountEventActions.EVENT_LIST_REQUEST]: (state) => ({\n        ...state, isLoading: true, error: null\n    }),\n    [AccountEventActions.EVENT_LIST_SUCCESS]: (state, action) => ({\n        ...state, events: { ...state.events, [action.account]: action.payload}, isLoading: false\n    }),\n    [AccountEventActions.EVENT_LIST_ERROR]: (state, action) => ({\n        ...state, isLoading: false, error: action.error\n    }),\n});\n\nexport default reducer\n","import { login, getCurrentUser } from '../util/APIUtils'\n\nexport function loginCall(values) {\n    const loginRequest = Object.assign({}, values);\n    return login(loginRequest)\n}\n\nexport function profileCall(token) {\n    return getCurrentUser()\n}\n","import { call, put, takeLatest } from 'redux-saga/effects';\nimport history from '../../util/history';\nimport { loginCall, profileCall } from '../../services/auth-api-service';\nimport {\n  LOGIN_REQUEST, LOGIN_SUCCESS, REQUEST_USER_PROFILE, GET_USER_PROFILE, LOGOUT_REQUEST, LOGOUT_SUCCESS,\n  loginSuccess, loginFailed, requestProfile, userProfile, logoutSuccess\n} from '../actions/auth-actions';\n\nimport { ACCESS_TOKEN } from '../../constants';\n\nfunction* loginSaga(action) {\n  try {\n    const values = action.payload;\n    const data = yield call(loginCall, values);\n    const token = data.access_token;\n    yield put(loginSuccess(token));\n  } catch(e) {\n    yield put(loginFailed(e));\n  }\n}\n\nfunction* onLoginSuccessSaga(action) {\n  const { token } = action.payload;\n  localStorage.setItem(ACCESS_TOKEN, token);\n  yield put(requestProfile(token));\n}\n\nfunction* profileSaga(action) {\n  try {\n    const token = action.payload.token || localStorage.getItem(ACCESS_TOKEN);\n    if (token) {\n      const userInfo = yield call(profileCall, token);\n      yield put(userProfile(userInfo));\n    }\n  } catch (e) {\n    yield put(loginFailed(e));\n  }\n}\n\nfunction* pushToHome() {\n  yield history.push('/');\n}\n\nfunction* logoutSaga() {\n  localStorage.removeItem(ACCESS_TOKEN);\n  yield put(logoutSuccess());\n}\n\nexport function* watchAuth() {\n  yield takeLatest(LOGIN_REQUEST, loginSaga);\n  yield takeLatest(LOGIN_SUCCESS, onLoginSuccessSaga);\n  yield takeLatest(REQUEST_USER_PROFILE, profileSaga);\n  yield takeLatest(GET_USER_PROFILE, pushToHome);\n  yield takeLatest(LOGOUT_REQUEST, logoutSaga);\n  yield takeLatest(LOGOUT_SUCCESS, pushToHome);\n}\n","export function getCurrencyRate(country) {\n    return fetch(`/currency/rate/${country}`)\n}\n","import { call, put, takeEvery } from 'redux-saga/effects';\nimport { getCurrencyRate } from '../../services/currency-rate-api-service';\nimport { CURRENCY_RATE_REQUEST, currencyRateSuccess, currencyRateFailed } from '../actions/currency-actions';\n\nfunction* requestAllCurrencySaga() {\n    yield requestCurrencySeq('USD');\n    yield requestCurrencySeq('EUR');\n    yield requestCurrencySeq('GBP');\n}\n\nfunction* requestCurrencySeq(code) {\n    try {\n        const response = yield call(getCurrencyRate, code);\n        const rate = yield response.json();\n        if (response.ok) {\n            yield put(currencyRateSuccess(code, rate));\n        } else {\n            yield put(currencyRateFailed('Currency fetch error'));\n        }\n    } catch (e) {\n        yield put(currencyRateFailed(e));\n    }\n}\n\nexport function* watchCurrency() {\n    yield takeEvery(CURRENCY_RATE_REQUEST, requestAllCurrencySaga);\n}\n","import { request } from '../util/APIUtils'\nimport { API_BASE_URL } from '../constants'\n\nexport function getUserAccountsCall() {\n    return request({\n        url: API_BASE_URL + \"/processing/accounts\",\n        method: 'GET'\n    });\n}\n\nexport function createUserAccount(code) {\n    return request({\n        url: API_BASE_URL + \"/processing/account\",\n        method: 'POST',\n        body: JSON.stringify({ currency: code })\n    });\n}\n\nexport function upAccountBalance(values) {\n    return request({\n        url: API_BASE_URL + \"/processing/account/\" + values.account,\n        method: 'PUT',\n        body: JSON.stringify(values)\n    });\n}\n\nexport function exchange(values) {\n    return request({\n        url: API_BASE_URL + \"/processing/exchange/\" + values.uid,\n        method: 'PUT',\n        body: JSON.stringify(values)\n    });\n}\n","import {call, put, takeLatest} from 'redux-saga/effects'\nimport { getUserAccountsCall, createUserAccount, upAccountBalance, exchange } from '../../services/account-api-service'\nimport {\n    ACCOUNT_LIST_REQUEST, NEW_ACCOUNT_REQUEST, NEW_ACCOUNT_SUCCESS,\n    UP_ACCOUNT_REQUEST, UP_ACCOUNT_SUCCESS, EXCHANGE_REQUEST, EXCHANGE_SUCCESS,\n    accountsListRequest, accountsListSuccess, accountsListFailed,\n    newAccountFailed, newAccountSuccess,\n    upAccountFailed, upAccountSuccess,\n    exchangeFailed, exchangeSuccess\n} from '../actions/account-actions'\n\nfunction* requestListAccountsSaga() {\n    try {\n       const accounts = yield call(getUserAccountsCall);\n       yield put(accountsListSuccess(accounts));\n    } catch (e) {\n        yield put(accountsListFailed(e));\n    }\n}\n\nfunction* requestNewAccountSaga(action) {\n    try {\n       const accountId = yield call(createUserAccount, action.payload);\n       yield put(newAccountSuccess(accountId));\n    } catch (e) {\n        yield put(newAccountFailed(e));\n    }\n}\n\nfunction* onCompleteSaga() {\n    yield put(accountsListRequest());\n}\n\nfunction* requestUpAccountSaga(action) {\n    try {\n        const account = yield call(upAccountBalance, action.payload);\n        yield put(upAccountSuccess(account));\n    } catch (e) {\n        yield put(upAccountFailed(e));\n    }\n}\n\nfunction* requestExchangeSaga(action) {\n    try {\n        const account = yield call(exchange, action.payload);\n        yield put(exchangeSuccess(account));\n    } catch (e) {\n        yield put(exchangeFailed(e));\n    }\n}\n\nexport function* watchAccounts() {\n    yield takeLatest(ACCOUNT_LIST_REQUEST, requestListAccountsSaga);\n    yield takeLatest(NEW_ACCOUNT_REQUEST, requestNewAccountSaga);\n    yield takeLatest(NEW_ACCOUNT_SUCCESS, onCompleteSaga);\n    yield takeLatest(UP_ACCOUNT_REQUEST, requestUpAccountSaga);\n    //yield takeLatest(UP_ACCOUNT_SUCCESS, onCompleteSaga);\n    yield takeLatest(EXCHANGE_REQUEST, requestExchangeSaga);\n    yield takeLatest(EXCHANGE_SUCCESS, onCompleteSaga);\n}\n","import { request } from '../util/APIUtils'\nimport { API_BASE_URL } from '../constants'\n\nexport function getAccountHistoryCall(account) {\n    return request({\n        url: API_BASE_URL + \"/history/account/\" + account,\n        method: 'GET'\n    });\n}\n","import { call, put, takeLatest } from 'redux-saga/effects'\nimport { getAccountHistoryCall } from '../../services/history-api-service'\nimport { EVENT_LIST_REQUEST, eventListSuccess, eventListFailed } from '../actions/history-actions'\n\nfunction* requestHistorySaga(action) {\n    try {\n        const accountId = action.payload;\n        const events = yield call(getAccountHistoryCall, accountId);\n        yield put(eventListSuccess(accountId, events));\n    } catch (e) {\n        yield put(eventListFailed(e));\n    }\n}\n\nexport function* watchHistory() {\n    yield takeLatest(EVENT_LIST_REQUEST, requestHistorySaga);\n}\n","import { all } from 'redux-saga/effects'\n\nimport { watchAuth } from './auth-saga'\nimport { watchCurrency } from './currency-saga'\nimport { watchAccounts } from './accounts-saga'\nimport { watchHistory } from './history-saga'\n\nexport default function* rootSaga() {\n  yield all([\n      watchAuth(),\n      watchCurrency(),\n      watchAccounts(),\n      watchHistory()\n  ]);\n}\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\n// Reducers\nimport authReducer from './reducers/auth-reducer';\nimport currencyReducer from './reducers/currency-reducer';\nimport accountReducer from './reducers/accounts-reducer';\nimport historyReducer from './reducers/history-reducer';\n\nimport rootSaga from './sagas/root-saga';\n\n// Combine Reducers\nconst reducers = combineReducers({\n    auth: authReducer,\n    currency: currencyReducer,\n    accounts: accountReducer,\n    history: historyReducer\n});\n\nconst appSagaMiddleware = createSagaMiddleware();\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst createAppStore = (initialState = {}) => {\n    const store = createStore(\n        reducers,\n        initialState,\n        composeEnhancers(applyMiddleware(appSagaMiddleware))\n    );\n\n    appSagaMiddleware.run(rootSaga);\n\n    return store;\n};\n\nexport default createAppStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport browserHistory from './util/history';\n\nimport createAppStore from './store/store'\nimport { loadFromStorage } from './util/store-utils'\n\nconst initialState = loadFromStorage();\n\nconst store = createAppStore(initialState);\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router history={browserHistory}>\n            <App />\n        </Router>\n    </Provider>,\n    document.getElementById('root')\n);\n\nregisterServiceWorker();\n","import { ACCESS_TOKEN } from '../constants';\n\nexport function loadFromStorage() {\n  const token = localStorage.getItem(ACCESS_TOKEN);\n  return (token && {auth: {token}}) || {};\n}\n"],"sourceRoot":""}